name: Staging CI/CD
on:
  push:
    branches:
      - development
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install, build, lint and test
      run: |
        yarn
        yarn lint --if-present
        yarn build --if-present
      env:
        CI: true

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH and deploy node app
      uses: appleboy/ssh-action@5711a203b3207eb1c6cebec6ac2152ab210ec3ae
      env:
        STAGING_PORT: ${{secrets.STAGING_PORT}}
        BROADCAST_NETWORK: ${{secrets.BROADCAST_NETWORK}}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: STAGING_PORT,BROADCAST_NETWORK
        script: |
          cd ~/hivesigner-ui
          git pull origin development
          yarn
          yarn build
          export PORT=$STAGING_PORT
          pm2 reload staging
          
  deploy-testnet:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: SSH and deploy node app
      uses: appleboy/ssh-action@5711a203b3207eb1c6cebec6ac2152ab210ec3ae
      env:
        TESTNET_PORT: ${{secrets.TESTNET_PORT}}
        BROADCAST_NETWORK: ${{secrets.BROADCAST_TESTNET_NETWORK}}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: TESTNET_PORT,BROADCAST_NETWORK
        script: |
          cd ~/hivesigner-ui
          git pull origin development
          yarn
          yarn build
          export PORT=$TESTNET_PORT
          export BROADCAST_NETWORK=$BROADCAST_NETWORK
          pm2 reload testnet
